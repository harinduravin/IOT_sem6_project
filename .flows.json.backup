[
    {
        "id": "4d83ec58.e26e84",
        "type": "tab",
        "label": "Firebase",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2ad522d6.3d80ce",
        "type": "tab",
        "label": "Forex Functions",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ae1d0766.e75b68",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8272fd45.4d821",
        "type": "tab",
        "label": "Master Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6d92e441.b263cc",
        "type": "ui_group",
        "name": "Exchange Rate",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9467bbf8.1e0c18",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3a4aeaa5.e720d6",
        "type": "exchangerates-key",
        "name": "Thushara"
    },
    {
        "id": "ec9f480b.2b6f68",
        "type": "exchangerates-key",
        "name": "Thishani2"
    },
    {
        "id": "abd7d4f.34da828",
        "type": "firebase config",
        "firebaseurl": "senudasampath-bb968-default-rtdb",
        "loginType": "none"
    },
    {
        "id": "e6313113.5cac7",
        "type": "firebase config",
        "firebaseurl": "sem-6b-iot-default-rtdb",
        "loginType": "none"
    },
    {
        "id": "643bdadb.c056a4",
        "type": "firebase config",
        "firebaseurl": "sem-6b-iot-default-rtdb",
        "loginType": "none"
    },
    {
        "id": "6ef5f71b.98f1b8",
        "type": "firebase config",
        "firebaseurl": "sem-6b-iot-default-rtdb",
        "loginType": "none"
    },
    {
        "id": "1be3b6ce.974509",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "27cb39de.f814e6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b438ea9a.594368",
        "type": "ui_tab",
        "name": "Breat Britain Pound (GBP)",
        "icon": "fa-gbp",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9aca7e3a.86356",
        "type": "ui_tab",
        "name": "JapaneseYen (JPY)",
        "icon": "fa-jpy",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "acbf1a0b.827148",
        "type": "ui_tab",
        "name": "Australian Dollars (AUD)",
        "icon": "fa-usd",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f46fb384.41299",
        "type": "ui_group",
        "name": "MACD",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": true
    },
    {
        "id": "8f4351af.98659",
        "type": "ui_group",
        "name": "SMA_AUD",
        "tab": "acbf1a0b.827148",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "13ca4ad2.b96045",
        "type": "ui_group",
        "name": "SMA_JPY",
        "tab": "9aca7e3a.86356",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "e59f12f2.46f08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b1d9d1fa.350a38",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "27c1fe9.4ffd902",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b1d9d1fa.350a38",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "afb405a3.db64e8",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "98e5e637.dd44e8",
        "type": "ui_group",
        "name": "SMA_USD",
        "tab": "4f954144.7bd11",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "1bc0043e.c2c83c",
        "type": "ui_group",
        "name": "ROC_USD",
        "tab": "4f954144.7bd11",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "6a61497d.3f27c8",
        "type": "ui_group",
        "name": "MACD_USD",
        "tab": "4f954144.7bd11",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": true
    },
    {
        "id": "23d26642.fdea2a",
        "type": "ui_group",
        "name": "RSI_USD",
        "tab": "4f954144.7bd11",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "4f954144.7bd11",
        "type": "ui_tab",
        "name": "US Dollar (USD)",
        "icon": "fa-usd",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c4caaf10.b0d89",
        "type": "ui_group",
        "name": "SMA_GBP",
        "tab": "b438ea9a.594368",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "e840065c.390a28",
        "type": "ui_group",
        "name": "ROC_GBP",
        "tab": "b438ea9a.594368",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "d8655d52.c6d5e",
        "type": "ui_group",
        "name": "MACD_GBP",
        "tab": "b438ea9a.594368",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b1d628da.081638",
        "type": "ui_group",
        "name": "RSI_GBP",
        "tab": "b438ea9a.594368",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "7f199c11.e99ce4",
        "type": "ui_tab",
        "name": "European Euro (EUR)",
        "icon": "fa-eur",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "746f420d.6accbc",
        "type": "ui_group",
        "name": "ROC_JPY",
        "tab": "9aca7e3a.86356",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "a3fa0c97.87ed6",
        "type": "ui_group",
        "name": "MACD_JPY",
        "tab": "9aca7e3a.86356",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "734a50b0.fb055",
        "type": "ui_group",
        "name": "RSI_JPY",
        "tab": "9aca7e3a.86356",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "49f6ac53.db1284",
        "type": "ui_group",
        "name": "ROC_AUD",
        "tab": "acbf1a0b.827148",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "9fcb5aec.ba81b8",
        "type": "ui_group",
        "name": "MACD_AUD",
        "tab": "acbf1a0b.827148",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "7e879c82.79f134",
        "type": "ui_group",
        "name": "RSI_AUD",
        "tab": "acbf1a0b.827148",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "f87583e3.28fb6",
        "type": "ui_group",
        "name": "SMA_EUR",
        "tab": "7f199c11.e99ce4",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "30ce8b62.807724",
        "type": "ui_group",
        "name": "ROC_EUR",
        "tab": "7f199c11.e99ce4",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "202493d2.1fd96c",
        "type": "ui_group",
        "name": "MACD_EUR",
        "tab": "7f199c11.e99ce4",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "94d5d7da.5ea488",
        "type": "ui_group",
        "name": "RSI_EUR",
        "tab": "7f199c11.e99ce4",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "cf87323.4d31cd",
        "type": "ui_tab",
        "name": "Kuwaiti Dinar (KWD)",
        "icon": "fa-usd",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bbbb092.d70abf8",
        "type": "ui_group",
        "name": "SMA_KWD",
        "tab": "cf87323.4d31cd",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "e9a7d04f.da92b",
        "type": "ui_group",
        "name": "ROC_KWD",
        "tab": "cf87323.4d31cd",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "65932f0f.b8ea9",
        "type": "ui_group",
        "name": "MACD_KWD",
        "tab": "cf87323.4d31cd",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "73a0efff.b50c8",
        "type": "ui_group",
        "name": "RSI_KWD",
        "tab": "cf87323.4d31cd",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "a1367960.5c4dd8",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "77d9c891.b79028"
            ]
        ]
    },
    {
        "id": "6220ff02.4761a",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"value\":[127.85,129.02,132.75,145.4,148.98,137.52,147.38,139.05,137.23,149.3,162.45,178.95,200.35,221.9,243.23,243.52,286.42,280.27],\"period\":4}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "a1367960.5c4dd8"
            ]
        ]
    },
    {
        "id": "77d9c891.b79028",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "54e555e0.e31d7c",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "8b31f2b2.a4946"
            ]
        ]
    },
    {
        "id": "86c32d4c.78803",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"values\":[127.75,129.02,132.75,145.4,148.98,137.52,147.38,139.05,137.23,149.3,162.45,178.95,200.35,221.9,243.23,243.52,286.42,280.27],\"fastPeriod\":5,\"slowPeriod\":8,\"signalPeriod\":3,\"SimpleMAOscillator\":false,\"SimpleMASignal\":false}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "54e555e0.e31d7c"
            ]
        ]
    },
    {
        "id": "8b31f2b2.a4946",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "b486ed73.33e1b",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "c1ee69f0.0d4318"
            ]
        ]
    },
    {
        "id": "828f077a.ed7f88",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"value\":[11045.27,11167.32,11008.61,11151.83,10926.77,10868.12,10520.32,10380.43,10785.14,10748.26,10896.91,10782.95,10620.16,10625.83,10510.95,10444.37,10068.01,10193.39,10066.57,10043.75],\"period\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "b486ed73.33e1b"
            ]
        ]
    },
    {
        "id": "c1ee69f0.0d4318",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "bc95624b.1f5fe",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a2c60656.85d268"
            ]
        ]
    },
    {
        "id": "a2c60656.85d268",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "func": "msg.params = {};\n// msg.params.base = 'USD'\nmsg.params.symbols = 'AUD'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "3ab86060.4ea31"
            ]
        ]
    },
    {
        "id": "dd61d5c7.f00a28",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "func": "// msg.params = {};\n// // msg.params.base = 'USD'\n// msg.params.symbols = 'KRW'\n\n// var rate = msg.payload.rates.LKR;\n// return {rate};\n\n\n// var newMsg = { 'payload2': msg.payload.rates };\n// return newMsg;\n\nvar newMsg = { payload: msg.payload.rates };\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3ab86060.4ea31",
        "type": "exchangeratesapi",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "url": "latest",
        "base": "",
        "symbols": "",
        "creds": "3a4aeaa5.e720d6",
        "x": 520,
        "y": 60,
        "wires": [
            [
                "dd61d5c7.f00a28"
            ]
        ]
    },
    {
        "id": "81ec3326.0bd8e8",
        "type": "firebase.once",
        "z": "4d83ec58.e26e84",
        "name": "get values",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 460,
        "y": 300,
        "wires": [
            [
                "ffddca73.d1678"
            ]
        ]
    },
    {
        "id": "b73d2405.d495f",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "get values",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 300,
        "wires": [
            [
                "81ec3326.0bd8e8"
            ]
        ]
    },
    {
        "id": "9b5b3bbb.e2d9",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 300,
        "wires": []
    },
    {
        "id": "ffddca73.d1678",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "filter",
        "func": "const values = []\n\nObject.keys(msg.payload).map(key=>(\n    values.push(msg.payload[key])\n    ))\n\nvar newMsg = { \n    payload: values\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "9b5b3bbb.e2d9"
            ]
        ]
    },
    {
        "id": "98dfe73.3b25298",
        "type": "firebase.once",
        "z": "4d83ec58.e26e84",
        "name": "get selected currency",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "selected_currency",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 650,
        "y": 380,
        "wires": [
            [
                "c90823.4e389fe"
            ]
        ]
    },
    {
        "id": "b2d533fb.f0c03",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "get selected currency",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "98dfe73.3b25298"
            ]
        ]
    },
    {
        "id": "c90823.4e389fe",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "f1a44017.90ab08",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "auth with username/pwd",
        "props": [
            {
                "p": "userdata",
                "v": "{\"username\":\"sem6biot\",\"password\":\"hdts05\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 540,
        "wires": [
            [
                "c34533df.488658"
            ]
        ]
    },
    {
        "id": "45fe98ed.964918",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 540,
        "wires": []
    },
    {
        "id": "8603f53.8567b88",
        "type": "firebase.once",
        "z": "4d83ec58.e26e84",
        "name": "get current user",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "user",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "25f02bcf.44f5c4"
            ]
        ]
    },
    {
        "id": "e2bddafa.5c0eb",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "get curent user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "8603f53.8567b88"
            ]
        ]
    },
    {
        "id": "25f02bcf.44f5c4",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 460,
        "wires": []
    },
    {
        "id": "c34533df.488658",
        "type": "firebase.once",
        "z": "4d83ec58.e26e84",
        "name": "get current user",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "user",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 610,
        "y": 540,
        "wires": [
            [
                "8e740a58.c2bd88"
            ]
        ]
    },
    {
        "id": "8e740a58.c2bd88",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "auth",
        "func": "let  iscorrect=false\nif (msg.payload.password==msg.userdata.password && msg.payload.username==msg.userdata.username ){\n    iscorrect=true\n}\nvar newMsg = { payload: iscorrect };\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 540,
        "wires": [
            [
                "45fe98ed.964918"
            ]
        ]
    },
    {
        "id": "1229ee47.933062",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 460,
        "wires": [
            [
                "8771f92e.bdbde8"
            ]
        ]
    },
    {
        "id": "27a88b3.16bec74",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"value\":[11045.27,11167.32,11008.61,11151.83,10926.77,10868.12,10520.32,10380.43,10785.14,10748.26,10896.91,10782.95,10620.16,10625.83,10510.95,10444.37,10068.01,10193.39,10066.57,10043.75],\"period\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "501c2b06.654374"
            ]
        ]
    },
    {
        "id": "8771f92e.bdbde8",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "b957780.deff688",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][global.get(\"selected_currency\")];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 460,
        "wires": [
            [
                "1229ee47.933062"
            ]
        ]
    },
    {
        "id": "501c2b06.654374",
        "type": "firebase.once",
        "z": "2ad522d6.3d80ce",
        "name": "get values",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "30",
                "valType": "str"
            }
        ],
        "x": 290,
        "y": 460,
        "wires": [
            [
                "b957780.deff688"
            ]
        ]
    },
    {
        "id": "c38ab726.bfede8",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"value\":[11045.27,11167.32,11008.61,11151.83,10926.77,10868.12,10520.32,10380.43,10785.14,10748.26,10896.91,10782.95,10620.16,10625.83,10510.95,10444.37,10068.01,10193.39,10066.57,10043.75],\"period\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "7c9db6ac.25ef78"
            ]
        ]
    },
    {
        "id": "eac65389.25b28",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][global.get(\"selected_currency\")];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n        \"fastPeriod\": 5,\n        \"slowPeriod\": 8,\n        \"signalPeriod\": 3,\n        \"SimpleMAOscillator\": false,\n        \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 560,
        "wires": [
            [
                "267e2fa8.83558"
            ]
        ]
    },
    {
        "id": "7c9db6ac.25ef78",
        "type": "firebase.once",
        "z": "2ad522d6.3d80ce",
        "name": "get values",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "",
                "valType": "str"
            }
        ],
        "x": 290,
        "y": 560,
        "wires": [
            [
                "eac65389.25b28"
            ]
        ]
    },
    {
        "id": "85272627.73e938",
        "type": "inject",
        "z": "2ad522d6.3d80ce",
        "name": "Send Array",
        "props": [
            {
                "p": "values",
                "v": "{\"value\":[11045.27,11167.32,11008.61,11151.83,10926.77,10868.12,10520.32,10380.43,10785.14,10748.26,10896.91,10782.95,10620.16,10625.83,10510.95,10444.37,10068.01,10193.39,10066.57,10043.75],\"period\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "2d61a6e1.ee06da"
            ]
        ]
    },
    {
        "id": "d8cb1a43.0b2148",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][global.get(\"selected_currency\")];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "20f10d0.45435f4"
            ]
        ]
    },
    {
        "id": "2d61a6e1.ee06da",
        "type": "firebase.once",
        "z": "2ad522d6.3d80ce",
        "name": "get values",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "",
                "valType": "str"
            }
        ],
        "x": 290,
        "y": 660,
        "wires": [
            [
                "d8cb1a43.0b2148"
            ]
        ]
    },
    {
        "id": "267e2fa8.83558",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 560,
        "wires": [
            [
                "43d2a492.567dfc"
            ]
        ]
    },
    {
        "id": "43d2a492.567dfc",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "20f10d0.45435f4",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "b0a69be3.457808",
                "a135be62.21a95"
            ]
        ]
    },
    {
        "id": "b0a69be3.457808",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "e3fe7a46.d18458",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "fetch and push rates",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 620,
        "wires": [
            [
                "a2d3233a.96fd4"
            ]
        ]
    },
    {
        "id": "a2d3233a.96fd4",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "Query",
        "func": "msg.params = {\n        symbols : 'USD,AUD,JPY,GBP,EUR,KWD,LKR'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "e0c16b3b.e49258"
            ]
        ]
    },
    {
        "id": "dff0df42.44ea9",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "formater",
        "func": "const rates = msg.payload.rates;\nconst LKR = rates[\"LKR\"]\nconst newRates = {\n    USD:parseFloat((LKR/rates.USD).toFixed(3)),\n    AUD:parseFloat((LKR/rates.AUD).toFixed(3)),\n    JPY:parseFloat((LKR/rates.JPY).toFixed(3)),\n    GBP:parseFloat((LKR/rates.GBP).toFixed(3)),\n    EUR:parseFloat((LKR/rates.EUR).toFixed(3)),\n    KWD:parseFloat((LKR/rates.KWD).toFixed(3)),\n}\n\n\nconst now = Date.now()\nvar newMsg = { formatedPayload: {[now]:newRates} };\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 620,
        "wires": [
            [
                "e2529988.3231c8"
            ]
        ]
    },
    {
        "id": "e0c16b3b.e49258",
        "type": "exchangeratesapi",
        "z": "4d83ec58.e26e84",
        "name": "",
        "url": "latest",
        "base": "",
        "symbols": "",
        "creds": "ec9f480b.2b6f68",
        "x": 650,
        "y": 620,
        "wires": [
            [
                "dff0df42.44ea9",
                "8d919997.754878"
            ]
        ]
    },
    {
        "id": "75c18ffc.94eb8",
        "type": "firebase modify",
        "z": "4d83ec58.e26e84",
        "name": "push",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1070,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "950f9e51.ad732",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "ceil/floor checker",
        "func": "const latest = Object.values(msg.formatedPayload)[0];\nconst last =  Object.values(Object.values(msg.payload)[0])[0];\n\nconst selectedNow = last[global.get(\"selected_currency\")];\nconst selectedLast = last[global.get(\"selected_currency\")];\nlet status = \"\";\nif(selectedNow==selectedLast){\n    status = \"no_change\"\n}else{\nconst isWentUp=selectedNow>selectedLast;\nif(isWentUp){\n    const change = (selectedNow-selectedLast)/selectedLast\n    if(change>=global.get(\"ceil\")/100){\n        status=\"ceiling_crossed\"\n    }else{\n        status=\"went_up\"\n    }\n}else{\n    const change = (selectedLast-selectedNow)/selectedLast   \n    if(change>=global.get(\"floor\")/100){\n        status=\"floor_crossed\"\n    }else{\n        status=\"went_down\"\n    }\n}\n}\nreturn {\nlatest,\nlast,\nselectedNow,\nselectedLast,\nstatus,\npayload:msg.formatedPayload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 800,
        "wires": [
            [
                "ffb98f8a.985",
                "75c18ffc.94eb8"
            ]
        ]
    },
    {
        "id": "8cbcc465.7ad078",
        "type": "firebase modify",
        "z": "4d83ec58.e26e84",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "selected_currency",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1020,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f31e761.2899b88",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "set selected currency",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "USD",
        "payloadType": "str",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "8cbcc465.7ad078"
            ]
        ]
    },
    {
        "id": "27290d4a.21b602",
        "type": "firebase modify",
        "z": "4d83ec58.e26e84",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "ceil",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1020,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5d701eeb.74516",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "set ceil %",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 240,
        "y": 140,
        "wires": [
            [
                "27290d4a.21b602"
            ]
        ]
    },
    {
        "id": "7518841f.0e3c7c",
        "type": "firebase modify",
        "z": "4d83ec58.e26e84",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "floor",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1020,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8d37634b.32a3c",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "set floor %",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "7518841f.0e3c7c"
            ]
        ]
    },
    {
        "id": "ffb98f8a.985",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 880,
        "wires": []
    },
    {
        "id": "e2529988.3231c8",
        "type": "firebase.once",
        "z": "4d83ec58.e26e84",
        "name": "get last value",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "1",
                "valType": "str"
            }
        ],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "950f9e51.ad732"
            ]
        ]
    },
    {
        "id": "5bcb85fe.3e3bac",
        "type": "timerswitch",
        "z": "4d83ec58.e26e84",
        "name": "Hourly Timer",
        "ontopic": "ON",
        "offtopic": "ON",
        "onpayload": "1",
        "offpayload": "0",
        "disabled": true,
        "schedules": [
            {
                "on_h": "00",
                "on_m": "05",
                "on_s": "00",
                "off_h": "01",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "02",
                "on_m": "05",
                "on_s": "00",
                "off_h": "03",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "04",
                "on_m": "05",
                "on_s": "00",
                "off_h": "05",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "06",
                "on_m": "05",
                "on_s": "00",
                "off_h": "07",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "08",
                "on_m": "05",
                "on_s": "00",
                "off_h": "09",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "10",
                "on_m": "05",
                "on_s": "00",
                "off_h": "11",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "12",
                "on_m": "05",
                "on_s": "00",
                "off_h": "13",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "14",
                "on_m": "05",
                "on_s": "00",
                "off_h": "15",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "16",
                "on_m": "05",
                "on_s": "00",
                "off_h": "17",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "18",
                "on_m": "05",
                "on_s": "00",
                "off_h": "19",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "20",
                "on_m": "05",
                "on_s": "00",
                "off_h": "21",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            },
            {
                "on_h": "22",
                "on_m": "05",
                "on_s": "00",
                "off_h": "23",
                "off_m": "05",
                "off_s": "00",
                "valid": true
            }
        ],
        "x": 240,
        "y": 700,
        "wires": [
            [
                "a2d3233a.96fd4"
            ]
        ]
    },
    {
        "id": "c70f8f7b.7ccc5",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "fetch and push rates",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"USD\":[198.05,198.49,199.78,198.05,198.57,198.93,198.13,197.19,198.52,197.43,197.3,198.46,199.25,197.41,199.27,199.14,199.7,199.36,198.44,198.2,198.49,197.18,199.46,198.19,199.6,198.47,197.96,199.85,198.3,199.17],\"JYP\":[1.8,1.77,1.8,1.77,1.77,1.79,1.79,1.81,1.79,1.8,1.79,1.81,1.81,1.8,1.82,1.78,1.8,1.8,1.79,1.8,1.81,1.78,1.78,1.79,1.8,1.81,1.79,1.8,1.82,1.81],\"EUR\":[238.27,239.72,239.47,242.28,236.03,235.16,240.2,239.92,241.46,238.91,240.87,237.94,242.98,239.2,240.28,238.48,236.34,237.55,237.06,238.59,235.14,238.4,237.64,240.18,239.66,236.69,242.28,235.07,241.14,237.81],\"AUD\":[153.36,153.62,153.11,152.73,152.17,154.26,150.96,150.07,152.41,152.09,153.71,151.36,150.08,154.13,150.24,150.67,152.71,154.12,151.16,151.3,151.53,150.7,154.42,154.79,151,154.83,153.66,151.98,151.92,150.66],\"KWD\":[656.35,659.39,657.09,655.26,656.47,657.58,655.77,654.36,659.6,657.59,658.24,658.41,655,658.28,659.41,658.59,656.84,659.12,659.33,656.17,654.45,654.45,656.83,654.83,655.65,659.65,658.7,654.71,659.54,658.38],\"GBP\":[281.41,278.46,278.7,281.36,277.73,276.23,282.15,278.14,278.93,280.43,282.34,282.04,276.65,281.72,282.59,281.4,276.42,276.96,280.09,278.19,279.96,276.24,278.84,279.65,282.16,282.96,276.06,276.4,278.5,282.44]}",
        "payloadType": "json",
        "x": 290,
        "y": 880,
        "wires": [
            [
                "f61afb9.5ea0808",
                "98be2c9a.61472"
            ]
        ]
    },
    {
        "id": "f61afb9.5ea0808",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "formater",
        "func": "\n\nconst rates = msg.payload;\nconst index = global.get(\"tempIndex\")\nconst newRates = {\n    USD:rates[\"USD\"][index],\n    AUD:rates[\"AUD\"][index],\n    JPY:rates[\"JYP\"][index],\n    GBP:rates[\"GBP\"][index],\n    EUR:rates[\"EUR\"][index],\n    KWD:rates[\"KWD\"][index],\n}\n\n\nconst now = Date.now()\nvar newMsg = { payload: {[now]:newRates} };\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 880,
        "wires": [
            [
                "d5505067.66613",
                "4ba9143d.8af14c"
            ]
        ]
    },
    {
        "id": "4ba9143d.8af14c",
        "type": "firebase modify",
        "z": "4d83ec58.e26e84",
        "name": "push",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 910,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "d5505067.66613",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "c239dd8c.4da3e",
        "type": "change",
        "z": "4d83ec58.e26e84",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tempIndex",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "98be2c9a.61472",
        "type": "function",
        "z": "4d83ec58.e26e84",
        "name": "",
        "func": "var newIndex = global.get(\"tempIndex\")+1;\n\n\nreturn {payload:newIndex};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 920,
        "wires": [
            [
                "c239dd8c.4da3e",
                "bba01c5e.61f07"
            ]
        ]
    },
    {
        "id": "ce5550aa.953ed",
        "type": "inject",
        "z": "4d83ec58.e26e84",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "b4305e4.25c24a"
            ]
        ]
    },
    {
        "id": "b4305e4.25c24a",
        "type": "change",
        "z": "4d83ec58.e26e84",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tempIndex",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "bba01c5e.61f07",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 960,
        "wires": []
    },
    {
        "id": "695304d7.e3f1ac",
        "type": "comment",
        "z": "4d83ec58.e26e84",
        "name": "## This is just dummy nodes",
        "info": "## This is just dummy nodes",
        "x": 300,
        "y": 820,
        "wires": []
    },
    {
        "id": "8d919997.754878",
        "type": "debug",
        "z": "4d83ec58.e26e84",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 780,
        "wires": []
    },
    {
        "id": "b4ff1e9d.3edae",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "db733dd9.aa4ea",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "Hourly Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "num",
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "a64ddbff.9c68c8",
        "type": "e-mail",
        "z": "ae1d0766.e75b68",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "anuradha.thishani@gmail.com",
        "dname": "Hello email",
        "x": 330,
        "y": 420,
        "wires": []
    },
    {
        "id": "5fc53c46.980464",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Hello World Email ",
        "payload": "Dear All, This is a \"Hello, World\" email.",
        "payloadType": "str",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "a64ddbff.9c68c8",
                "dabc34a6.2f0098"
            ]
        ]
    },
    {
        "id": "6918d921.b76bb8",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "LKR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "efc5c7b2.40ad78",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "API_CALL",
        "func": "msg.params = {\n        symbols : 'USD,AUD,JPY,GBP,EUR,KWD,LKR'\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 150,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "220eef4a.85562",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "FORMAT_CURRENCIES",
        "func": "// msg.params = {};\n// // msg.params.base = 'USD'\n// msg.params.symbols = 'KRW'\n// return msg;\n\n// var newMsg = { payload: msg.payload.rates.LKR};\n\n// return newMsg;\n\nvar pay = msg.payload;\nvar top = msg.topic;\n\n// var newMsg = {payload: {LKR:pay.rates.LKR,\n//                         AUD:pay.rates.AUD,\n//                         KWD:pay.rates.KWD,\n//                         JPY:pay.rates.JPY,\n//                         EUR:pay.rates.EUR,\n//                         GBP:pay.rates.GBP}, \n//                         topic:top};\nvar rets = [];\nrets.push({payload:pay.rates.LKR, topic:\"LKR\"})\nrets.push({payload:pay.rates.AUD, topic:\"AUD\"})\nrets.push({payload:pay.rates.KWD, topic:\"KWD\"})\nrets.push({payload:pay.rates.JPY, topic:\"JPY\"})\nrets.push({payload:pay.rates.EUR, topic:\"EUR\"})\nrets.push({payload:pay.rates.GBP, topic:\"GBP\"})\n\n// rets.push({payload:pay.rates.LKR, topic:\"LKR\"})\n// rets.push({payload:pay.rates.AUD, topic:\"AUD\"})\n// rets.push({payload:, topic:\"\"})\n\n\n// rets.push({payload:{GBP:pay.rates.GBP,\n//     EUR:pay.rates.EUR,\n//     JPY:pay.rates.JPY,\n//     KWD:pay.rates.KWD,\n    \n    \n// }, topic:\"MQTT\"})\n\nreturn rets;\n",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "6918d921.b76bb8"
            ],
            [
                "42a4dba6.4e5a64"
            ],
            [
                "e6cb7f31.1214b"
            ],
            [
                "a357b00e.cd357"
            ],
            [
                "eb439b5d.d3a968"
            ],
            [
                "2707d4df.00af9c"
            ],
            []
        ]
    },
    {
        "id": "72a71d7f.65ffb4",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "LKR",
        "payload": "1",
        "payloadType": "num",
        "x": 680,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ac7f07fa.013bf8",
        "type": "e-mail",
        "z": "ae1d0766.e75b68",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "anuradha.thishani@gmail.com",
        "dname": "Hello email",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "42a4dba6.4e5a64",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "AUD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "e6cb7f31.1214b",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "KWD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 180,
        "wires": []
    },
    {
        "id": "a357b00e.cd357",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "JPY",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "eb439b5d.d3a968",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "EUR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "2707d4df.00af9c",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "GBP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 300,
        "wires": []
    },
    {
        "id": "dabc34a6.2f0098",
        "type": "debug",
        "z": "ae1d0766.e75b68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 360,
        "wires": []
    },
    {
        "id": "55bbbae5.2acb04",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9b5681.69a348",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8ade8622.717038",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3f0312f5.4ebe8e",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d38ee6cc.d2c308",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=175;\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\n\nvar newPrice = price*(1+gauss*sd);\n\n// var gauss2 = gauss.value;\n\n\n\nreturn {payload:newPrice, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f4d065aa.99dee8",
        "type": "mqtt in",
        "z": "ae1d0766.e75b68",
        "name": "IOT_6B/G05/UserNeeds",
        "topic": "IOT_6B/G05/UserNeeds",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "5b586330.0763ec"
            ]
        ]
    },
    {
        "id": "1eb40c31.dca9e4",
        "type": "mqtt in",
        "z": "ae1d0766.e75b68",
        "name": "",
        "topic": "IOT_6B/G05/BuzzerNotification",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 170,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "2d078f8f.9a1eb",
        "type": "mqtt in",
        "z": "ae1d0766.e75b68",
        "name": "",
        "topic": "IOT_6B/G05/CommonData",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 150,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "84c68d6f.65677",
        "type": "mqtt out",
        "z": "ae1d0766.e75b68",
        "name": "IOT_6B/G05/ceil",
        "topic": "IOT_6B/G05/BuzzerNotification",
        "qos": "2",
        "retain": "true",
        "broker": "27cb39de.f814e6",
        "x": 410,
        "y": 740,
        "wires": []
    },
    {
        "id": "48a6cbc3.8694f4",
        "type": "mqtt out",
        "z": "ae1d0766.e75b68",
        "name": "IOT_6B/G05/currency",
        "topic": "IOT_6B/G05/CommonData",
        "qos": "2",
        "retain": "true",
        "broker": "27cb39de.f814e6",
        "x": 140,
        "y": 800,
        "wires": []
    },
    {
        "id": "844f9090.db10a",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Harindu Ravin Jayaratne",
        "payloadType": "str",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "84c68d6f.65677"
            ]
        ]
    },
    {
        "id": "5b586330.0763ec",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var inputString = msg.payload;\nvar inputData = inputString.split(\"$\");\n//timestamp$user_email$currency$ceil_percentage$floor_percentage\n\nconst data = {\n    timestamp:inputData[0],\n    user_email:inputData[1],\n    currency:inputData[2],\n    ceil_percentage:parseInt(inputData[3]),\n    floor_percentage:parseInt(inputData[4]),\n}\nreturn{ payload:data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ae61de6.c90212",
        "type": "mqtt in",
        "z": "ae1d0766.e75b68",
        "name": "",
        "topic": "IOT_6B/G05/UserAuth",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 140,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1107d372.5bd18d",
        "type": "mqtt out",
        "z": "ae1d0766.e75b68",
        "name": "IOT_6B/G05/currency",
        "topic": "IOT_6B/G05/UserAuth",
        "qos": "2",
        "retain": "true",
        "broker": "27cb39de.f814e6",
        "x": 140,
        "y": 880,
        "wires": []
    },
    {
        "id": "4fb3f35d.ac78cc",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "Gaussian Random",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "b4ff1e9d.3edae"
            ]
        ]
    },
    {
        "id": "f0774816.873978",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 660,
        "y": 460,
        "wires": [
            [
                "8ade8622.717038"
            ]
        ]
    },
    {
        "id": "ebffa6a8.8a84c8",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "3f0312f5.4ebe8e"
            ]
        ]
    },
    {
        "id": "ef009de9.21fcb",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 660,
        "y": 340,
        "wires": [
            [
                "55bbbae5.2acb04"
            ]
        ]
    },
    {
        "id": "b52e5763.edae68",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 660,
        "y": 400,
        "wires": [
            [
                "cf9b5681.69a348"
            ]
        ]
    },
    {
        "id": "829f91b1.e04c7",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 660,
        "y": 580,
        "wires": [
            [
                "d38ee6cc.d2c308"
            ]
        ]
    },
    {
        "id": "b1432b63.61db38",
        "type": "firebase.on",
        "z": "8272fd45.4d821",
        "name": "fetch selected currency in init and save it globaly",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "selected_currency",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 260,
        "y": 180,
        "wires": [
            [
                "aaacbb8.b580a48"
            ]
        ]
    },
    {
        "id": "aaacbb8.b580a48",
        "type": "change",
        "z": "8272fd45.4d821",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_currency",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8088f677.420da8",
        "type": "firebase.on",
        "z": "8272fd45.4d821",
        "name": "fetch ceil in init and save it globaly",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "ceil",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 220,
        "y": 240,
        "wires": [
            [
                "e01544d4.8e62f8"
            ]
        ]
    },
    {
        "id": "e01544d4.8e62f8",
        "type": "change",
        "z": "8272fd45.4d821",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ceil",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "72fe2825.5457b8",
        "type": "firebase.on",
        "z": "8272fd45.4d821",
        "name": "fetch floor in init and save it globaly",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "floor",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 220,
        "y": 300,
        "wires": [
            [
                "86869029.54e4d"
            ]
        ]
    },
    {
        "id": "86869029.54e4d",
        "type": "change",
        "z": "8272fd45.4d821",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "floor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "65710b22.ae2154",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "Initial fetch and set global",
        "info": "",
        "x": 190,
        "y": 100,
        "wires": []
    },
    {
        "id": "378d4209.d91afe",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Query",
        "func": "msg.params = {\n        symbols : 'USD,AUD,JPY,GBP,EUR,KWD,LKR'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "31571381.b0778c"
            ]
        ]
    },
    {
        "id": "c6aace7d.2a93d",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "formater",
        "func": "const rates = msg.payload.rates;\nconst LKR = rates[\"LKR\"]\nconst newRates = {\n    USD:parseFloat((LKR/rates.USD).toFixed(3)),\n    AUD:parseFloat((LKR/rates.AUD).toFixed(3)),\n    JPY:parseFloat((LKR/rates.JPY).toFixed(3)),\n    GBP:parseFloat((LKR/rates.GBP).toFixed(3)),\n    EUR:parseFloat((LKR/rates.EUR).toFixed(3)),\n    KWD:parseFloat((LKR/rates.KWD).toFixed(3)),\n}\n//save currency to global once in a hour\n\nglobal.set(\"current_currencies\",newRates)\n\nconst now = Date.now()\nvar newMsg = { formatedPayload: {[now]:newRates} };\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 500,
        "wires": [
            [
                "b2654f82.c9d6"
            ]
        ]
    },
    {
        "id": "31571381.b0778c",
        "type": "exchangeratesapi",
        "z": "8272fd45.4d821",
        "name": "",
        "url": "latest",
        "base": "",
        "symbols": "",
        "creds": "3a4aeaa5.e720d6",
        "x": 540,
        "y": 420,
        "wires": [
            [
                "c6aace7d.2a93d"
            ]
        ]
    },
    {
        "id": "1902bfde.e530e",
        "type": "firebase modify",
        "z": "8272fd45.4d821",
        "name": "push",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1290,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3acd6f.3faf6",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "ceil/floor checker",
        "func": "const latest = Object.values(msg.formatedPayload)[0];\nconst last =  Object.values(Object.values(msg.payload)[0])[0];\n\nconst selectedNow = last[global.get(\"selected_currency\")];\nconst selectedLast = last[global.get(\"selected_currency\")];\nlet status = \"\";\nif(selectedNow==selectedLast){\n    status = \"no_change\"\n}else{\nconst isWentUp=selectedNow>selectedLast;\nif(isWentUp){\n    const change = (selectedNow-selectedLast)/selectedLast\n    if(change>=global.get(\"ceil\")/100){\n        status=\"ceiling_crossed\"\n    }else{\n        status=\"went_up\"\n    }\n}else{\n    const change = (selectedLast-selectedNow)/selectedLast   \n    if(change>=global.get(\"floor\")/100){\n        status=\"floor_crossed\"\n    }else{\n        status=\"went_down\"\n    }\n}\n}\nreturn {\nlatest,\nlast,\nselectedNow,\nselectedLast,\nstatus,\npayload:msg.formatedPayload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 500,
        "wires": [
            [
                "ec61a6d4.c6cd08",
                "1902bfde.e530e"
            ]
        ]
    },
    {
        "id": "ec61a6d4.c6cd08",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 440,
        "wires": []
    },
    {
        "id": "b2654f82.c9d6",
        "type": "firebase.once",
        "z": "8272fd45.4d821",
        "name": "get last value",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "1",
                "valType": "str"
            }
        ],
        "x": 890,
        "y": 420,
        "wires": [
            [
                "9f3acd6f.3faf6"
            ]
        ]
    },
    {
        "id": "bf09b3d1.525",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "Fetch / Push / Check for ceil/floor ",
        "info": "## This is just dummy nodes",
        "x": 210,
        "y": 420,
        "wires": []
    },
    {
        "id": "7bcdb981.6f1478",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "1 Hour Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "378d4209.d91afe"
            ]
        ]
    },
    {
        "id": "8f8d3f5a.13922",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "1 minute Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "num",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "ceaa1f06.6d1d4"
            ]
        ]
    },
    {
        "id": "b2f82d09.08997",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "ceil/floor checker",
        "func": "const last = global.get(\"current_currencies\");\nconst latest = msg.payload;\n\nconst selectedNow = latest[global.get(\"selected_currency\")];\nconst selectedLast = last[global.get(\"selected_currency\")];\nlet status = \"\";\nif(selectedNow==selectedLast){\n    status = \"no_change\"\n}else{\nconst isWentUp=selectedNow>selectedLast;\nif(isWentUp){\n    const change = (selectedNow-selectedLast)/selectedLast\n    if(change>=global.get(\"ceil\")/100){\n        status=\"ceiling_crossed\"\n    }else{\n        status=\"went_up\"\n    }\n}else{\n    const change = (selectedLast-selectedNow)/selectedLast   \n    if(change>=global.get(\"floor\")/100){\n        status=\"floor_crossed\"\n    }else{\n        status=\"went_down\"\n    }\n}\n}\nglobal.set(\"current_currencies\",latest);\nreturn {payload:{\nlatest,\nlast,\nselectedNow,\nselectedLast,\nstatus,\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 780,
        "wires": [
            [
                "9afc634d.6f194",
                "72753cfb.9905c4"
            ]
        ]
    },
    {
        "id": "62af1c54.4ab0e4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 80,
        "wires": [
            [
                "be3ba054.0850a"
            ]
        ]
    },
    {
        "id": "3bb0cd33.3e4322",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2910,
        "y": 140,
        "wires": [
            [
                "dcc5f8a1.6bbc18"
            ]
        ]
    },
    {
        "id": "76bb9582.c1937c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2920,
        "y": 260,
        "wires": [
            [
                "aac9b509.724e78"
            ]
        ]
    },
    {
        "id": "dcc5f8a1.6bbc18",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 140,
        "wires": [
            [
                "9037750e.abaf38"
            ]
        ]
    },
    {
        "id": "be3ba054.0850a",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 80,
        "wires": [
            [
                "eb0529f5.834d38"
            ]
        ]
    },
    {
        "id": "aac9b509.724e78",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 260,
        "wires": [
            [
                "4346724f.9bf44c"
            ]
        ]
    },
    {
        "id": "f28021cc.f1fd6",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - USD",
        "info": "## This is just dummy nodes",
        "x": 3530,
        "y": 160,
        "wires": []
    },
    {
        "id": "b11f7780.cbcc98",
        "type": "firebase.once",
        "z": "8272fd45.4d821",
        "name": "get values",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "values",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [
            {
                "name": "orderByValue",
                "value": "",
                "valType": ""
            },
            {
                "name": "limitToLast",
                "value": "40",
                "valType": "str"
            }
        ],
        "x": 2000,
        "y": 960,
        "wires": [
            [
                "8de4b25c.2934d",
                "bcac6a44.3114f8",
                "8b547eb5.98e5e",
                "a1a229b7.596fd8",
                "e2ea5698.e573c8",
                "d2edb4ba.d9b8b8",
                "5a7ea818.0798f8",
                "64a34aa9.e4be14",
                "a7a2c085.85e53",
                "6624e17e.92de",
                "3d5195e7.03a2fa",
                "45935f08.e4a8d",
                "a35f22a9.ab32b",
                "26cdcd15.68c9b2",
                "4ca47a1d.4970e4",
                "1da1dd31.493ef3",
                "60f948e5.fa8dd8",
                "bd14f107.b1592",
                "2b4133cc.00fd9c",
                "4d309b3.78ea664",
                "48887156.468c7",
                "647cc880.aa2a58",
                "32bd374f.5e7538",
                "abe4570e.760d08"
            ]
        ]
    },
    {
        "id": "bcac6a44.3114f8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"USD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 140,
        "wires": [
            [
                "3bb0cd33.3e4322"
            ]
        ]
    },
    {
        "id": "8de4b25c.2934d",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"USD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 80,
        "wires": [
            [
                "62af1c54.4ab0e4"
            ]
        ]
    },
    {
        "id": "a1a229b7.596fd8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"USD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 260,
        "wires": [
            [
                "76bb9582.c1937c"
            ]
        ]
    },
    {
        "id": "54402a74.affbb4",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "1 hour Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "num",
        "x": 1800,
        "y": 960,
        "wires": [
            [
                "b11f7780.cbcc98"
            ]
        ]
    },
    {
        "id": "9afc634d.6f194",
        "type": "switch",
        "z": "8272fd45.4d821",
        "name": "Switch actions with status",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ceiling_crossed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "floor_crossed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "9bb1a166.4623",
                "55cdca30.b39a04"
            ],
            [
                "cfecccb7.71f0a",
                "27747179.03282e"
            ]
        ]
    },
    {
        "id": "125ddb6.9786025",
        "type": "e-mail",
        "z": "8272fd45.4d821",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Ceil mail",
        "x": 1480,
        "y": 760,
        "wires": []
    },
    {
        "id": "9bb1a166.4623",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "mail body",
        "func": "\nreturn {\n    payload:`Dear Sir/Madame, Ceil limit is crossed.Current value of  in ${global.get(\"selected_currency\")} is ${global.get(\"current_currencies\")[global.get(\"selected_currency\")]} LKR`,\n    to:global.get(\"current_user\").email,\n    topic:\"Ceil Crossed\"\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "125ddb6.9786025"
            ]
        ]
    },
    {
        "id": "b872a7e7.f84be8",
        "type": "e-mail",
        "z": "8272fd45.4d821",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Floor mail",
        "x": 1480,
        "y": 800,
        "wires": []
    },
    {
        "id": "cfecccb7.71f0a",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "mail body",
        "func": "\nreturn {\n payload:`Dear Sir/Madame, floor limit is crossed.Current value of  in ${global.get(\"selected_currency\")} is ${global.get(\"current_currencies\")[global.get(\"selected_currency\")]} LKR`,\n    to:global.get(\"current_user\").email,\n    topic:\"Floor Crossed\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "b872a7e7.f84be8"
            ]
        ]
    },
    {
        "id": "ab0df97e.7259f8",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "Sends notifications",
        "info": "## This is just dummy nodes",
        "x": 1650,
        "y": 780,
        "wires": []
    },
    {
        "id": "eb0529f5.834d38",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "98e5e637.dd44e8",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_USD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9037750e.abaf38",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "1bc0043e.c2c83c",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_USD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4346724f.9bf44c",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "23d26642.fdea2a",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_USD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a135be62.21a95",
        "type": "function",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 760,
        "wires": [
            [
                "5ab2f904.bcb5e8"
            ]
        ]
    },
    {
        "id": "5ab2f904.bcb5e8",
        "type": "debug",
        "z": "2ad522d6.3d80ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 760,
        "wires": []
    },
    {
        "id": "8b547eb5.98e5e",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"USD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 200,
        "wires": [
            [
                "484123bc.16b9ec"
            ]
        ]
    },
    {
        "id": "484123bc.16b9ec",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2850,
        "y": 200,
        "wires": [
            [
                "337d10a7.b966c"
            ]
        ]
    },
    {
        "id": "337d10a7.b966c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 200,
        "wires": [
            [
                "fb0fb2f3.11692"
            ]
        ]
    },
    {
        "id": "fb0fb2f3.11692",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "6a61497d.3f27c8",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_USD",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f9516941.386e08",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 340,
        "wires": [
            [
                "521bf29e.359c1c"
            ]
        ]
    },
    {
        "id": "fa818041.736e2",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2910,
        "y": 400,
        "wires": [
            [
                "94ea65cd.1e4958"
            ]
        ]
    },
    {
        "id": "88324518.3d2938",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2920,
        "y": 520,
        "wires": [
            [
                "af9a00d3.284fd"
            ]
        ]
    },
    {
        "id": "94ea65cd.1e4958",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 400,
        "wires": [
            [
                "367ad6e3.af410a"
            ]
        ]
    },
    {
        "id": "521bf29e.359c1c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 340,
        "wires": [
            [
                "bc1e0247.9a3de"
            ]
        ]
    },
    {
        "id": "af9a00d3.284fd",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 520,
        "wires": [
            [
                "67b55ddc.3be324"
            ]
        ]
    },
    {
        "id": "5ca50d42.ec5eb4",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - GBP",
        "info": "## This is just dummy nodes",
        "x": 3530,
        "y": 420,
        "wires": []
    },
    {
        "id": "d2edb4ba.d9b8b8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"GBP\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 400,
        "wires": [
            [
                "fa818041.736e2"
            ]
        ]
    },
    {
        "id": "e2ea5698.e573c8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"GBP\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 340,
        "wires": [
            [
                "f9516941.386e08"
            ]
        ]
    },
    {
        "id": "64a34aa9.e4be14",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"GBP\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 520,
        "wires": [
            [
                "88324518.3d2938"
            ]
        ]
    },
    {
        "id": "bc1e0247.9a3de",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "c4caaf10.b0d89",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_GBP",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "367ad6e3.af410a",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "e840065c.390a28",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_GBP",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5a7ea818.0798f8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"GBP\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 460,
        "wires": [
            [
                "4205680d.d5a2c8"
            ]
        ]
    },
    {
        "id": "4205680d.d5a2c8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2850,
        "y": 460,
        "wires": [
            [
                "553d9c14.3c9ac4"
            ]
        ]
    },
    {
        "id": "553d9c14.3c9ac4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 460,
        "wires": [
            [
                "fc1551d6.5f473"
            ]
        ]
    },
    {
        "id": "fc1551d6.5f473",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "d8655d52.c6d5e",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_GBP",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "67b55ddc.3be324",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "b1d628da.081638",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_GBP",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3340,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4ab1e32b.98cf7c",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/BuzzerNotification",
        "qos": "",
        "retain": "",
        "broker": "27cb39de.f814e6",
        "x": 1650,
        "y": 720,
        "wires": []
    },
    {
        "id": "55cdca30.b39a04",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "let payload = \n    `${parseInt((Date.now()/1000).toString())}$${global.get(\"current_user\").email}$${global.get(\"selected_currency\")}$${1}$${0}`\n\nreturn {payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 720,
        "wires": [
            [
                "4ab1e32b.98cf7c"
            ]
        ]
    },
    {
        "id": "71d045f7.d5460c",
        "type": "firebase.on",
        "z": "8272fd45.4d821",
        "name": "fetch user in init and save it globaly",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "user",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 220,
        "y": 140,
        "wires": [
            [
                "58aa77c6.f73258"
            ]
        ]
    },
    {
        "id": "58aa77c6.f73258",
        "type": "change",
        "z": "8272fd45.4d821",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_user",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "667b15a.8c2aeec",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/BuzzerNotification",
        "qos": "",
        "retain": "",
        "broker": "27cb39de.f814e6",
        "x": 1650,
        "y": 840,
        "wires": []
    },
    {
        "id": "27747179.03282e",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "let payload = \n    `${parseInt((Date.now()/1000).toString())}$${global.get(\"current_user\").email}$${global.get(\"selected_currency\")}$${0}$${1}`\n\nreturn {payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 840,
        "wires": [
            [
                "667b15a.8c2aeec"
            ]
        ]
    },
    {
        "id": "72753cfb.9905c4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "const currencies = msg.payload.latest \nconst last = msg.payload.last \n\nlet bitarray = \"\"\nfor (const [key, value] of Object.entries(currencies)) {\n  if(currencies[key]>=last[key]){\n      bitarray=bitarray+\"1\"\n  }else{\n      bitarray=bitarray+\"0\"\n  }\n  console.log(currencies[key],last[key])\n}\n\nlet payload = \n`${parseInt((Date.now()/1000).toString())}$${currencies.USD}$${currencies.GBP}$${currencies.JPY}$${currencies.AUD}$${currencies.KWD}$${currencies.EUR}$${bitarray}`\n   // `${Date.now()}$${global.get(\"current_user\").email}$${global.get(\"selected_currency\")}$${1}$${0}`\n\nreturn {payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 920,
        "wires": [
            [
                "415db567.257c9c"
            ]
        ]
    },
    {
        "id": "415db567.257c9c",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/CommonData",
        "qos": "",
        "retain": "",
        "broker": "27cb39de.f814e6",
        "x": 1480,
        "y": 920,
        "wires": []
    },
    {
        "id": "e155304a.85ee2",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "let gaussianValues=[0,0,0,0,0,0]\nif(global.get(\"gaussianValues\")){\n    gaussianValues=global.get(\"gaussianValues\")\n    var gauss = msg.payload.values[0].value;\n    gaussianValues.splice(0, 0, gauss);\n    gaussianValues.pop();\n}else{\n   global.set(\"gaussianValues\",[0,0,0,0,0,0]) \n}\n\nglobal.set(\"gaussianValues\",gaussianValues)\nreturn {payload:gauss, topic:gauss};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9438846a.99ce68",
        "type": "gaussian",
        "z": "8272fd45.4d821",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "e155304a.85ee2"
            ]
        ]
    },
    {
        "id": "70d8500b.fae52",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "9438846a.99ce68"
            ]
        ]
    },
    {
        "id": "a64a7285.af5ea",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "Gaussian generator",
        "info": "## This is just dummy nodes",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "ceaa1f06.6d1d4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Fomater ",
        "func": "var price=global.get(\"current_currencies\");\nvar sd = 0.000001;\nvar gausses = global.get(\"gaussianValues\");\nconst newRates = {\n    USD:parseFloat((price.USD*(1+gausses[0]*price.USD*sd)).toFixed(3)),\n    AUD:parseFloat((price.AUD*(1+gausses[1]*price.AUD*sd)).toFixed(3)),\n    JPY:parseFloat((price.JPY*(1+gausses[2]*price.JPY*sd)).toFixed(3)),\n    GBP:parseFloat((price.GBP*(1+gausses[3]*price.GBP*sd)).toFixed(3)),\n    EUR:parseFloat((price.EUR*(1+gausses[4]*price.EUR*sd)).toFixed(3)),\n    KWD:parseFloat((price.KWD*(1+gausses[5]*price.KWD*sd)).toFixed(3)),\n}\n\n\nreturn {payload:newRates, Topic:\"New Price\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 780,
        "wires": [
            [
                "b2f82d09.08997"
            ]
        ]
    },
    {
        "id": "eec6234d.e0a48",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").USD\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"USD\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "b6c5849c.178888",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").AUD\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"AUD\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 720,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "b605f5ce.f5c3f8",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").JPY\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"JPY\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 780,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "122b055f.c74a5b",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").GBP\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"GBP\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "e0887c89.6d339",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").EUR\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"EUR\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 900,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "fe228419.04e6b8",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "var price=global.get(\"current_currencies\").KWD\nvar sd = price*0.000001;\nvar gauss = msg.payload.values[0].value;\nvar newPrice = price*(1+gauss*sd);\nreturn {payload:newPrice, topic:\"KWD\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 960,
        "wires": [
            [
                "bbb1df13.2f1b3"
            ]
        ]
    },
    {
        "id": "a331837b.93b78",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 660,
        "wires": [
            [
                "eec6234d.e0a48"
            ]
        ]
    },
    {
        "id": "f5e59951.f77b88",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 840,
        "wires": [
            [
                "122b055f.c74a5b"
            ]
        ]
    },
    {
        "id": "c3d8592a.54f848",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 900,
        "wires": [
            [
                "e0887c89.6d339"
            ]
        ]
    },
    {
        "id": "d13b9dce.3b519",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 720,
        "wires": [
            [
                "b6c5849c.178888"
            ]
        ]
    },
    {
        "id": "4f7078bb.d7f9b8",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 780,
        "wires": [
            [
                "b605f5ce.f5c3f8"
            ]
        ]
    },
    {
        "id": "908f461d.f94968",
        "type": "gaussian",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mu_day": "0",
        "sigma_day": "1",
        "tstart_day": "7",
        "tend_day": "19",
        "mu_even": "0",
        "sigma_even": "1",
        "tstart_even": "19",
        "tend_even": "23",
        "mu_night": "0",
        "sigma_night": "1",
        "tstart_night": "0",
        "tend_night": "7",
        "layout": "row-spread",
        "x": 840,
        "y": 960,
        "wires": [
            [
                "fe228419.04e6b8"
            ]
        ]
    },
    {
        "id": "616bfb4.cdc6d04",
        "type": "function",
        "z": "ae1d0766.e75b68",
        "name": "",
        "func": "const newRates = {\n    USD:msg.USD,\n    AUD:msg.AUD,\n    JPY:msg.JPY,\n    GBP:msg.GBP,\n    EUR:msg.EUR,\n    KWD:msg.KWD\n}\nreturn {payload:newRates};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "34d21f45.62892",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "a331837b.93b78"
            ]
        ]
    },
    {
        "id": "bbb1df13.2f1b3",
        "type": "join",
        "z": "ae1d0766.e75b68",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1190,
        "y": 820,
        "wires": [
            [
                "616bfb4.cdc6d04"
            ]
        ]
    },
    {
        "id": "260f4553.b375ea",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 720,
        "wires": [
            [
                "d13b9dce.3b519"
            ]
        ]
    },
    {
        "id": "5002bd9c.28cf54",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 780,
        "wires": [
            [
                "4f7078bb.d7f9b8"
            ]
        ]
    },
    {
        "id": "e10c092e.2289d8",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 840,
        "wires": [
            [
                "f5e59951.f77b88"
            ]
        ]
    },
    {
        "id": "93710c45.6c4f8",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 900,
        "wires": [
            [
                "c3d8592a.54f848"
            ]
        ]
    },
    {
        "id": "c4512b6c.93dd08",
        "type": "inject",
        "z": "ae1d0766.e75b68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 960,
        "wires": [
            [
                "908f461d.f94968"
            ]
        ]
    },
    {
        "id": "bd99adb.5edcd5",
        "type": "firebase modify",
        "z": "8272fd45.4d821",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "selected_currency",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1370,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "36224d8e.673ba2",
        "type": "firebase modify",
        "z": "8272fd45.4d821",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "ceil",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1370,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "cc0c9866.931be8",
        "type": "firebase modify",
        "z": "8272fd45.4d821",
        "name": "set",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "floor",
        "method": "set",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1370,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8055aebc.7a0a7",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var currency =  \"USD\"\n    \nif(msg.payload.selected_currency){\n    currency =  msg.payload.selected_currency\n}\n\n\n\nreturn {payload:currency};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1080,
        "wires": [
            [
                "bd99adb.5edcd5"
            ]
        ]
    },
    {
        "id": "f37b35cd.26ebb8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\nvar ceil =  5\n    \nif(msg.payload.ceil){\n    ceil =  msg.payload.ceil\n}\n\n\nreturn {payload:ceil};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1120,
        "wires": [
            [
                "36224d8e.673ba2"
            ]
        ]
    },
    {
        "id": "bf4d7483.c9b728",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\n\nvar floor =  5\n    \nif(msg.payload.floor){\n    floor =  msg.payload.floor\n}\n\nreturn {payload:floor};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1160,
        "wires": [
            [
                "cc0c9866.931be8"
            ]
        ]
    },
    {
        "id": "6bee77ed.8ed238",
        "type": "mqtt in",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/UserAuth",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 160,
        "y": 1460,
        "wires": [
            [
                "5684af05.8233e"
            ]
        ]
    },
    {
        "id": "90f2fe69.2a02",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "Simulate rapid fluctuation ",
        "info": "## This is just dummy nodes",
        "x": 190,
        "y": 700,
        "wires": []
    },
    {
        "id": "41163c3e.098354",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "MQTT",
        "info": "## This is just dummy nodes",
        "x": 110,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5684af05.8233e",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var inputString = msg.payload;\nvar inputData = inputString.split(\"$\");\n\nvar timeDiff = parseInt((Date.now()/1000).toString())-parseInt(inputData[0])\nglobal.set(\"last_logged_user\",{\n    email:inputData[1],\n    password:inputData[2],\n})\n\nconst userdata = {\n    timestamp:inputData[0],\n    email:inputData[1],\n    password:inputData[2],\n   timeDiff:timeDiff\n}\nreturn{userdata};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1460,
        "wires": [
            [
                "45fd83a9.1a68cc",
                "54bb973c.6e1718"
            ]
        ]
    },
    {
        "id": "227d1148.29237e",
        "type": "firebase.once",
        "z": "8272fd45.4d821",
        "name": "get current user",
        "firebaseconfig": "6ef5f71b.98f1b8",
        "childpath": "user",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "5d6424ce.2fa61c"
            ]
        ]
    },
    {
        "id": "5d6424ce.2fa61c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "auth",
        "func": "let  iscorrect=\"false\"\nif (msg.payload.password==msg.userdata.password && msg.payload.email==msg.userdata.email ){\n    iscorrect=\"true\"\n}\nvar newMsg = { payload: iscorrect };\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1460,
        "wires": [
            [
                "1ce834c7.62e9ab",
                "c94756e8.5f7d78"
            ]
        ]
    },
    {
        "id": "1ce834c7.62e9ab",
        "type": "switch",
        "z": "8272fd45.4d821",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1460,
        "wires": [
            [
                "aba426b7.57c5d8"
            ],
            [
                "8bb9d06b.dfdbb"
            ]
        ]
    },
    {
        "id": "8ee24e45.00d2d",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/AuthResponse",
        "qos": "2",
        "retain": "false",
        "broker": "27cb39de.f814e6",
        "x": 1480,
        "y": 1480,
        "wires": []
    },
    {
        "id": "7a50f3a1.b28c3c",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/AuthResponse",
        "qos": "2",
        "retain": "false",
        "broker": "27cb39de.f814e6",
        "x": 1480,
        "y": 1440,
        "wires": []
    },
    {
        "id": "aba426b7.57c5d8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\nconst token = Math.random().toString(36).substr(2);\nglobal.set(\"token\",token)\nreturn {\n    payload:`${parseInt((Date.now()/1000).toString())}$${global.get(\"last_logged_user\").email}$success$${token}`\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1260,
        "y": 1440,
        "wires": [
            [
                "7a50f3a1.b28c3c",
                "b44f44ed.bd3448"
            ]
        ]
    },
    {
        "id": "8bb9d06b.dfdbb",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "global.set(\"token\",\"\")\nreturn {\n    payload:`${parseInt((Date.now()/1000).toString())}$${global.get(\"last_logged_user\").email}$error$null`\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1260,
        "y": 1480,
        "wires": [
            [
                "8ee24e45.00d2d",
                "661d1956.3dac98"
            ]
        ]
    },
    {
        "id": "c45b7557.2b14f8",
        "type": "switch",
        "z": "8272fd45.4d821",
        "name": "",
        "property": "token",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "payload.token",
                "vt": "msg"
            },
            {
                "t": "neq",
                "v": "payload.token",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1140,
        "wires": [
            [
                "8055aebc.7a0a7",
                "bf4d7483.c9b728",
                "f37b35cd.26ebb8",
                "d13468bb.755048",
                "174b4d3e.d2fc43"
            ],
            [
                "8944ec3e.86679"
            ]
        ]
    },
    {
        "id": "c2308bde.27c3b8",
        "type": "mqtt in",
        "z": "8272fd45.4d821",
        "name": "IOT_6B/G05/UserNeeds",
        "topic": "IOT_6B/G05/UserNeeds",
        "qos": "2",
        "datatype": "auto",
        "broker": "27cb39de.f814e6",
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "f0d2c30c.a6598"
            ]
        ]
    },
    {
        "id": "f0d2c30c.a6598",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var inputString = msg.payload;\n\nvar inputData = inputString.split(\"$\");\n//timestamp$user_email$currency$ceil_percentage$floor_percentage\nvar timeDiff = parseInt((Date.now()/1000).toString())-parseInt(inputData[0])\nconst data = {\n    timestamp:inputData[0],\n    token:inputData[1],\n    selected_currency:inputData[2],\n    ceil:parseInt(inputData[3]),\n    floor:parseInt(inputData[4]),\n    timeDiff:timeDiff\n}\nreturn{ payload:data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 1140,
        "wires": [
            [
                "d269bb9.ee7ca48"
            ]
        ]
    },
    {
        "id": "8944ec3e.86679",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\nreturn {payload:`${parseInt((Date.now()/1000).toString())}$not-authenticated`};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1280,
        "wires": [
            [
                "d02b1e55.a885d",
                "4569432f.1a3ccc"
            ]
        ]
    },
    {
        "id": "bd124c.ec4c1db8",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "token",
        "payloadType": "global",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "e9497db.663848"
            ]
        ]
    },
    {
        "id": "e9497db.663848",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "621844da.cfdc1c",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/UserNeedsResponse ",
        "qos": "2",
        "retain": "false",
        "broker": "27cb39de.f814e6",
        "x": 1440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d13468bb.755048",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\nreturn {payload:`${parseInt((Date.now()/1000).toString())}$success`};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1220,
        "wires": [
            [
                "621844da.cfdc1c"
            ]
        ]
    },
    {
        "id": "d02b1e55.a885d",
        "type": "mqtt out",
        "z": "8272fd45.4d821",
        "name": "",
        "topic": "IOT_6B/G05/UserNeedsResponse ",
        "qos": "2",
        "retain": "false",
        "broker": "27cb39de.f814e6",
        "x": 1440,
        "y": 1280,
        "wires": []
    },
    {
        "id": "eec63619.4f63a8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 620,
        "wires": [
            [
                "a8d7ebb5.580a98"
            ]
        ]
    },
    {
        "id": "127021fe.2a9cde",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2910,
        "y": 680,
        "wires": [
            [
                "2e32c1.4f363d4"
            ]
        ]
    },
    {
        "id": "7279911e.2d77b",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2920,
        "y": 800,
        "wires": [
            [
                "4838fbc2.3ab4c4"
            ]
        ]
    },
    {
        "id": "2e32c1.4f363d4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 680,
        "wires": [
            [
                "b9957b43.482338"
            ]
        ]
    },
    {
        "id": "a8d7ebb5.580a98",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 620,
        "wires": [
            [
                "294012bb.e45cde"
            ]
        ]
    },
    {
        "id": "4838fbc2.3ab4c4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 800,
        "wires": [
            [
                "77e4f3ce.ebbfec"
            ]
        ]
    },
    {
        "id": "a37a3c87.873ee",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - AUD",
        "info": "## This is just dummy nodes",
        "x": 3530,
        "y": 700,
        "wires": []
    },
    {
        "id": "6624e17e.92de",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"AUD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 680,
        "wires": [
            [
                "127021fe.2a9cde"
            ]
        ]
    },
    {
        "id": "a7a2c085.85e53",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"AUD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 620,
        "wires": [
            [
                "eec63619.4f63a8"
            ]
        ]
    },
    {
        "id": "45935f08.e4a8d",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"AUD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 800,
        "wires": [
            [
                "7279911e.2d77b"
            ]
        ]
    },
    {
        "id": "294012bb.e45cde",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "8f4351af.98659",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_AUD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b9957b43.482338",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "49f6ac53.db1284",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_AUD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "77e4f3ce.ebbfec",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "7e879c82.79f134",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_AUD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3340,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3d5195e7.03a2fa",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"AUD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 740,
        "wires": [
            [
                "686cdab7.b1b374"
            ]
        ]
    },
    {
        "id": "686cdab7.b1b374",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2850,
        "y": 740,
        "wires": [
            [
                "ec76f315.6841c"
            ]
        ]
    },
    {
        "id": "ec76f315.6841c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3160,
        "y": 740,
        "wires": [
            [
                "c9a95c9b.9cc4b"
            ]
        ]
    },
    {
        "id": "c9a95c9b.9cc4b",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "9fcb5aec.ba81b8",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_AUD",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3350,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9deba970.ca3c98",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2950,
        "y": 920,
        "wires": [
            [
                "e920ec9d.b0ef"
            ]
        ]
    },
    {
        "id": "d5f2aa.2d848d58",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 980,
        "wires": [
            [
                "cfa5bb4e.a156f8"
            ]
        ]
    },
    {
        "id": "684803eb.83e54c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2940,
        "y": 1100,
        "wires": [
            [
                "8630a5e.c43ad58"
            ]
        ]
    },
    {
        "id": "cfa5bb4e.a156f8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 980,
        "wires": [
            [
                "eda74c78.9f1e2"
            ]
        ]
    },
    {
        "id": "e920ec9d.b0ef",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 920,
        "wires": [
            [
                "af481d98.d20d4"
            ]
        ]
    },
    {
        "id": "8630a5e.c43ad58",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1100,
        "wires": [
            [
                "7b7a5d20.04e5b4"
            ]
        ]
    },
    {
        "id": "809ae6c4.324658",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - JPY",
        "info": "## This is just dummy nodes",
        "x": 3530,
        "y": 1020,
        "wires": []
    },
    {
        "id": "26cdcd15.68c9b2",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"JPY\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 980,
        "wires": [
            [
                "d5f2aa.2d848d58"
            ]
        ]
    },
    {
        "id": "a35f22a9.ab32b",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"JPY\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 920,
        "wires": [
            [
                "9deba970.ca3c98"
            ]
        ]
    },
    {
        "id": "1da1dd31.493ef3",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"JPY\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1100,
        "wires": [
            [
                "684803eb.83e54c"
            ]
        ]
    },
    {
        "id": "af481d98.d20d4",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "13ca4ad2.b96045",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_JPY",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "eda74c78.9f1e2",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "746f420d.6accbc",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_JPY",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "4ca47a1d.4970e4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"JPY\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1040,
        "wires": [
            [
                "75dfbf2e.edb12"
            ]
        ]
    },
    {
        "id": "75dfbf2e.edb12",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2870,
        "y": 1040,
        "wires": [
            [
                "fc92324e.12a72"
            ]
        ]
    },
    {
        "id": "fc92324e.12a72",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1040,
        "wires": [
            [
                "8282503.c3b1cb"
            ]
        ]
    },
    {
        "id": "8282503.c3b1cb",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "a3fa0c97.87ed6",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_JPY",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "7b7a5d20.04e5b4",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "734a50b0.fb055",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_JPY",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3360,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "321b42cd.ea213e",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2950,
        "y": 1180,
        "wires": [
            [
                "9e7c457.49030b8"
            ]
        ]
    },
    {
        "id": "7e6888d9.ed7188",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 1240,
        "wires": [
            [
                "1edae2ba.2d387d"
            ]
        ]
    },
    {
        "id": "3c1442e1.93495e",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2940,
        "y": 1360,
        "wires": [
            [
                "fac535db.f56c18"
            ]
        ]
    },
    {
        "id": "1edae2ba.2d387d",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1240,
        "wires": [
            [
                "fe8cb2c0.83a96"
            ]
        ]
    },
    {
        "id": "9e7c457.49030b8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1180,
        "wires": [
            [
                "305bf935.0d1836"
            ]
        ]
    },
    {
        "id": "fac535db.f56c18",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1360,
        "wires": [
            [
                "a4144466.52f3d8"
            ]
        ]
    },
    {
        "id": "16d98bcc.df2e44",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - EUR",
        "info": "## This is just dummy nodes",
        "x": 3550,
        "y": 1240,
        "wires": []
    },
    {
        "id": "bd14f107.b1592",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"EUR\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1240,
        "wires": [
            [
                "7e6888d9.ed7188"
            ]
        ]
    },
    {
        "id": "60f948e5.fa8dd8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"EUR\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1180,
        "wires": [
            [
                "321b42cd.ea213e"
            ]
        ]
    },
    {
        "id": "4d309b3.78ea664",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"EUR\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1360,
        "wires": [
            [
                "3c1442e1.93495e"
            ]
        ]
    },
    {
        "id": "305bf935.0d1836",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "f87583e3.28fb6",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_EUR",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "fe8cb2c0.83a96",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "30ce8b62.807724",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_EUR",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "2b4133cc.00fd9c",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"EUR\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1300,
        "wires": [
            [
                "981d62d1.eb955"
            ]
        ]
    },
    {
        "id": "981d62d1.eb955",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2870,
        "y": 1300,
        "wires": [
            [
                "c640570b.bb87e8"
            ]
        ]
    },
    {
        "id": "c640570b.bb87e8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1300,
        "wires": [
            [
                "50afdc1e.94ddd4"
            ]
        ]
    },
    {
        "id": "50afdc1e.94ddd4",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "202493d2.1fd96c",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_EUR",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "a4144466.52f3d8",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "94d5d7da.5ea488",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_EUR",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3360,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4c14ab72.127e44",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Simple Moving Average (SMA)",
        "func": "var moment = global.get('techmodule');\n\nconst SMA = moment.SMA\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : SMA.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2950,
        "y": 1480,
        "wires": [
            [
                "f376b1a1.52fc4"
            ]
        ]
    },
    {
        "id": "9633c2fc.d0803",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Rate Of Change (ROC)",
        "func": "var moment = global.get('techmodule');\n\nconst ROC = moment.ROC\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : ROC.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2930,
        "y": 1540,
        "wires": [
            [
                "787476d8.836b78"
            ]
        ]
    },
    {
        "id": "5ba1f000.34bcf",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "Relative Strength Index (RSI)",
        "func": "var moment = global.get('techmodule');\n\nconst RSI = moment.RSI\nlet period = msg.values.period; \nlet values = msg.values.value;                    \n\nvar out = {\n  values    : RSI.calculate({period : period, values : values})\n}\nmsg =  out\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2940,
        "y": 1660,
        "wires": [
            [
                "d37ff0b1.2765"
            ]
        ]
    },
    {
        "id": "787476d8.836b78",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Rate of Change\";\nvar series = \"ROC\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1540,
        "wires": [
            [
                "f109ccd0.2be25"
            ]
        ]
    },
    {
        "id": "f376b1a1.52fc4",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Simple Moving Average\";\nvar series = \"SMA\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1480,
        "wires": [
            [
                "64fc2866.621898"
            ]
        ]
    },
    {
        "id": "d37ff0b1.2765",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = \"Relative Strength Index\";\nvar series = \"RSI\";\nvar data = [];\nfor (i = 0; i < pay.length; i++) {\n    data.push({\"x\":i,\"y\":pay[i]});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1660,
        "wires": [
            [
                "b16e5610.44e988"
            ]
        ]
    },
    {
        "id": "18bec44.03eed3c",
        "type": "comment",
        "z": "8272fd45.4d821",
        "name": "CHART - KWD",
        "info": "## This is just dummy nodes",
        "x": 3560,
        "y": 1540,
        "wires": []
    },
    {
        "id": "647cc880.aa2a58",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"KWD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n         \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1540,
        "wires": [
            [
                "9633c2fc.d0803"
            ]
        ]
    },
    {
        "id": "48887156.468c7",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"KWD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"value\":values,\n       \"period\": 4\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1480,
        "wires": [
            [
                "4c14ab72.127e44"
            ]
        ]
    },
    {
        "id": "abe4570e.760d08",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"KWD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n    \"value\":values,\n       \"period\": 5\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1660,
        "wires": [
            [
                "5ba1f000.34bcf"
            ]
        ]
    },
    {
        "id": "64fc2866.621898",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "bbbb092.d70abf8",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "SMA_KWD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "f109ccd0.2be25",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "e9a7d04f.da92b",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "ROC_KWD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "32bd374f.5e7538",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "filter",
        "func": "const values = []\n\n\nObject.keys(msg.payload).map(key=>{\n    let currency_ob=Object.values(msg.payload[key])[0][\"KWD\"];\n    values.push(currency_ob);\n    })\n\nvar newMsg = { \n    values: {\n        \"values\":values,\n        \"fastPeriod\": 5,\n    \"slowPeriod\": 8,\n    \"signalPeriod\": 3,\n    \"SimpleMAOscillator\": false,\n    \"SimpleMASignal\": false\n    }\n};\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 1600,
        "wires": [
            [
                "b71ae71a.087d58"
            ]
        ]
    },
    {
        "id": "b71ae71a.087d58",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "MACD",
        "func": "var moment = global.get('techmodule');\nvar MACD = moment.MACD;\n\n\nvar macdInput = msg.values;                    \n\nvar out = {\n  values    : MACD.calculate(macdInput)\n}\nmsg =  out\nreturn msg\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2870,
        "y": 1600,
        "wires": [
            [
                "eff996a3.4664c8"
            ]
        ]
    },
    {
        "id": "eff996a3.4664c8",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "var i;\nvar pay = msg.values;\nvar labels = [\"MACD\",\"Signal\",\"Histogram\"];\nvar series = [\"MACD\",\"Signal\",\"Histogram\"];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (i = 2; i < pay.length; i++) {\n    data1.push({\"x\":i,\"y\":pay[i].MACD});\n    data2.push({\"x\":i,\"y\":pay[i].signal});\n    data3.push({\"x\":i,\"y\":pay[i].histogram});\n}\n\n\n\nmsg.payload = [{\"series\":series,\n                \"data\":[data1,data2,data3],\n                \"labels\":labels}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3180,
        "y": 1600,
        "wires": [
            [
                "596cb003.c66f3"
            ]
        ]
    },
    {
        "id": "596cb003.c66f3",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "65932f0f.b8ea9",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "MACD_KWD",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3370,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "b16e5610.44e988",
        "type": "ui_chart",
        "z": "8272fd45.4d821",
        "name": "",
        "group": "73a0efff.b50c8",
        "order": 1,
        "width": "18",
        "height": "7",
        "label": "RSI_KWD",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3360,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "d7f95ef3.72e4a",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "Test Buzzer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "55cdca30.b39a04"
            ]
        ]
    },
    {
        "id": "4569432f.1a3ccc",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1340,
        "wires": []
    },
    {
        "id": "25cbdd40.0a8782",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "Too Late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1620,
        "wires": []
    },
    {
        "id": "174b4d3e.d2fc43",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 980,
        "wires": []
    },
    {
        "id": "c94756e8.5f7d78",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1620,
        "wires": []
    },
    {
        "id": "7576a562.917c7c",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "current_user",
        "payloadType": "global",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "d4ab5e4.2bbf1a"
            ]
        ]
    },
    {
        "id": "d4ab5e4.2bbf1a",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "944500e9.e6d85",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1740,
        "wires": [
            [
                "7d77deb0.35d1b"
            ]
        ]
    },
    {
        "id": "2a24446e.4c01ec",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7d77deb0.35d1b",
        "type": "function",
        "z": "8272fd45.4d821",
        "name": "",
        "func": "\nreturn {payload:Date.now()};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1740,
        "wires": [
            [
                "2a24446e.4c01ec"
            ]
        ]
    },
    {
        "id": "b44f44ed.bd3448",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1380,
        "wires": []
    },
    {
        "id": "661d1956.3dac98",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c9c644e9.7f4878",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "x": 860,
        "y": 260,
        "wires": [
            [
                "c39fee26.9a778"
            ]
        ]
    },
    {
        "id": "c39fee26.9a778",
        "type": "change",
        "z": "8272fd45.4d821",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "waiting_time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d269bb9.ee7ca48",
        "type": "switch",
        "z": "8272fd45.4d821",
        "name": "",
        "property": "payload.timeDiff",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "waiting_time",
                "vt": "global"
            },
            {
                "t": "gt",
                "v": "waiting_time",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1140,
        "wires": [
            [
                "c45b7557.2b14f8"
            ],
            [
                "25a3652.526f59a"
            ]
        ]
    },
    {
        "id": "25a3652.526f59a",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "Too Late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1300,
        "wires": []
    },
    {
        "id": "45fd83a9.1a68cc",
        "type": "switch",
        "z": "8272fd45.4d821",
        "name": "",
        "property": "userdata.timeDiff",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "waiting_time",
                "vt": "global"
            },
            {
                "t": "gt",
                "v": "waiting_time",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "227d1148.29237e"
            ],
            [
                "25cbdd40.0a8782"
            ]
        ]
    },
    {
        "id": "54bb973c.6e1718",
        "type": "debug",
        "z": "8272fd45.4d821",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1640,
        "wires": []
    },
    {
        "id": "4a5d98b7.48bd18",
        "type": "inject",
        "z": "8272fd45.4d821",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "9bb1a166.4623"
            ]
        ]
    }
]